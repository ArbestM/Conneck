@model Conneck.Models.EditAdmin

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<form class="row g-3">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



    <div class="col-md-5">

        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-4" })
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-5">

        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-4" })
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-5">

        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-4" })
        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-5">

        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-4" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-10">

        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-4" })
        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-5">

        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-4" })
        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-2">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "" })
        <br />
        @Html.EnumDropDownListFor(model => model.State, new { htmlAttributes = new { @class = "" } })
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>


    <div class="col-md-3">

        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "" })
        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })

    </div>

    <div class="col-md-5">

        <br />
        <a href="Create" class="btn btn-info form-control">
            &nbsp; Create
        </a>
    </div>
    <div class="col-md-5">
        <br />
        <a href="Index" class="btn btn-success form-control">
            &nbsp; Back to List
        </a>
    </div>
</form>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
