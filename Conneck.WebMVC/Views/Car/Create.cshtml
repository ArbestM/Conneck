@model Conneck.Models.CarCreate

@{
    ViewBag.Title = "Create";
}

<form method="post">
    @Html.AntiForgeryToken()

    <div class="backgroundWhite border ">
        <h4>Add new car</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.CarM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarM, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.CarM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LicensePlate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicensePlate, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.LicensePlate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.CarType, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CarType, new { htmlAttributes = new { @class = "form-control col-10" } })
                @Html.ValidationMessageFor(model => model.CarType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control col-7" } })
                @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control col-7" } })
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.AdminID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdminID, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.AdminID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.StoreID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StoreID, new { htmlAttributes = new { @class = "form-control col-sm-7" } })
                @Html.ValidationMessageFor(model => model.StoreID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-5">
                <div class="row">
                    <div class="col-6">

                        <input type="submit" class="btn btn-info form-control" value="Create" />

                    </div>

                    <div class="col-6">
                        <a href="Index" class="btn btn-info form-control ">
                            &nbsp; Back to List
                        </a>
                    </div>

                </div>

            </div>
        </div>
    </div>
    
</form>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
