@model Conneck.Models.EditStore

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Store</h2>


<from method="post">

    @Html.AntiForgeryToken()

    <div class="border backgroundWhite col-8">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.StoreID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.StoreID, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.StoreID, "", new { @class = "text-danger" })

        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.StoreName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.StoreName, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })

        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.AdminID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.AdminID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ModifiedUtc, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ModifiedUtc, new { htmlAttributes = new { @class = "form-control col-7" } })
            @Html.ValidationMessageFor(model => model.ModifiedUtc, "", new { @class = "text-danger" })

        </div>
        <div class="form-group row">
            <div class="col-5 offset-2">
                <div class="row">
                    <div class="col-6">
                        <input type="submit" value="Save" class="btn btn-info form-control" />
                    </div>
                    <div class="col-6">
                        <a href="Index" class="btn btn-success form-control">
                            &nbsp; Back to List
                        </a>
                    </div>

                </div>

            </div>
        </div>
    </div>
</from>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
